# -*- coding: utf-8 -*-
"""imersao_python_alura.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KC87DlEP1aTxpPJ8FmD9YpvdRjWNupxe

# Imersão Python Alura

## Aula 2

### Importação
"""

import pandas as pd
import plotly.express as px

df_principal = pd.read_excel("/content/acoes_puras.xlsx", sheet_name="Principal")
df_principal.head(5)

df_total_acoes = pd.read_excel("/content/acoes_puras.xlsx", sheet_name="Total_de_acoes")
df_total_acoes.head(5)

df_ticker = pd.read_excel("/content/acoes_puras.xlsx", sheet_name="Ticker")
df_ticker.head(5)

df_chat_gpt = pd.read_excel("/content/acoes_puras.xlsx", sheet_name="Chat_GPT")
df_chat_gpt.head(5)

"""## Aula 3"""

df_principal = df_principal[['Ativo','Data','Último (R$)','Var. Dia (%)']].copy()

df_principal = df_principal.rename(columns={'Último (R$)':'valor_final', 'Var. Dia (%)':'var_dia_pct'}).copy()

df_principal['var_pct'] = df_principal['var_dia_pct'] / 100
df_principal['var_inicial'] = df_principal['valor_final'] / (1 + df_principal['var_pct'])

df_total_acoes = df_total_acoes.rename(columns={'Código':'codigo', 'Qtde. Teórica':'qtd_teorica'}).copy()
df_principal = df_principal.merge(df_total_acoes, left_on='Ativo', right_on='codigo', how='left')

df_principal = df_principal.drop(columns=['codigo'])

df_principal['variacao_rs'] = (df_principal['valor_final'] - df_principal['var_inicial']) * df_principal['qtd_teorica']

pd.options.display.float_format = '{:.2f}'.format

df_principal['qtd_teorica'] = df_principal['qtd_teorica'].astype(int)

df_principal['var_pct'] = df_principal['var_pct'].map('{:.4f}'.format)

df_principal['resultado'] = df_principal['variacao_rs'].apply(lambda x: 'Subiu' if x > 0 else ("Desceu" if x < 0 else "Estavel"))

df_principal = df_principal.merge(df_ticker, left_on='Ativo', right_on='Ticker', how='left')
df_principal = df_principal.drop(columns=['Ticker'])

df_chat_gpt = df_chat_gpt.rename(columns={'Nome da Empresa':'nome', 'Segmento':'segmento', 'Idade (anos)':'idade'}).copy()
df_principal = df_principal.rename(columns={'Nome':'nome_empresa'}).copy()
df_principal = df_principal.merge(df_chat_gpt, left_on='nome_empresa', right_on='nome', how='left')
df_principal = df_principal.drop(columns=['nome'])

df_principal['cat_idade'] = df_principal['idade'].apply(lambda x: 'Mais de 100' if x > 100 else ("Menos de 50" if x < 50 else "Entre 50 e 100"))

df_principal.head(5)

maior = df_principal['variacao_rs'].max()
menor = df_principal['variacao_rs'].min()
media = df_principal['variacao_rs'].mean()
media_subiu = df_principal[df_principal['resultado'] == 'Subiu']['variacao_rs'].mean()
media_desceu = df_principal[df_principal['resultado'] == 'Desceu']['variacao_rs'].mean()

print(f"Maior R$ {maior.round(2):,}")
print(f"Menor R$ {menor.round(2):,}")
print(f"Média R$ {media.round(2):,}")
print(f"Média de quem subiu R$ {media_subiu.round(2):,}")
print(f"Média de quem desceu R$ {media_desceu.round(2):,}")

df_principal_subiu = df_principal[df_principal['resultado'] == 'Subiu']

df_analise_segmento = df_principal_subiu.groupby('segmento')['variacao_rs'].sum().reset_index()
df_analise_segmento.head(5)

df_analise_saldo = df_principal.groupby('resultado')['variacao_rs'].sum().reset_index()
df_analise_saldo

fig = px.bar(df_analise_saldo, x='resultado', y='variacao_rs', text='variacao_rs', title='Variação em Reais por Resultado')
fig.show()

"""## Aula 3 Desafios"""

fig.update_layout(yaxis_tickformat='$,.2f')
fig.update_traces(texttemplate='R$%{text:,.2f}', textposition='auto')
fig.show()

values = df_analise_segmento['variacao_rs']
labels = df_analise_segmento['segmento']
fig_segmento = px.pie(values=values, names=labels, title="Variação em Reais por Segmento")
fig_segmento.show()

df_analise_cat_idade = df_principal.groupby('cat_idade')['variacao_rs'].sum().reset_index()
df_analise_cat_idade_quantidade = df_principal.groupby('cat_idade')['Ativo'].count().reset_index()
df_analise_cat_idade_quantidade = df_analise_cat_idade_quantidade.rename(columns={'Ativo':'quantidade'})
df_analise_cat_idade = df_analise_cat_idade.merge(df_analise_cat_idade_quantidade)
df_analise_cat_idade = df_analise_cat_idade.reindex([2,0,1])
df_analise_cat_idade

fig_idades = px.bar(df_analise_cat_idade, x='cat_idade', y='variacao_rs', text='variacao_rs', title='Variação em Reais por Faixa etária')
fig_idades.update_layout(yaxis_tickformat='$,.2f')
fig_idades.update_traces(texttemplate='R$%{text:,.2f}', textposition='auto')
fig_idades.show()

idade_values = df_analise_cat_idade['quantidade']
idade_labels = df_analise_cat_idade['cat_idade']
fig_idades_quantidade = px.pie(values=idade_values, names=idade_labels, title="Quantidades de empresas por Faixa etária")
fig_idades_quantidade.show()